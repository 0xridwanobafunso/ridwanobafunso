(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{251:function(t,e,n){"use strict";n.r(e);var r={layout:"oss",head:{title:"Suya - Usage",meta:[{name:"description",content:"An effective way to use suya library in your Express.js application"}]},mounted:function(){twemoji.parse(document.body,{folder:"svg",ext:".svg"}),hljs.highlightAll()},data:function(){return{state:!1}},methods:{toggleMenu:function(){this.state=!this.state}}},o=n(8),component=Object(o.a)(r,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"leading-7"},[n("div",{staticClass:"flex flex-wrap"},[n("div",{staticClass:"w-full hidden lg:block lg:w-1/6 h-screen overflow-y-auto p-5"},[t._m(0),t._v(" "),n("ul",{staticClass:"mt-5"},[n("li",{staticClass:"text-black font-bold"},[t._v("#")]),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Introduction")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Features")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Special Thanks")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Repository")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Changelog")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Versioning")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Share")])],1)]),t._v(" "),n("li",{staticClass:"mt-5 text-black font-bold"},[t._v("Getting Started")]),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Installation")])],1),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("npm")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("yarn")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("manual")])],1)]),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Why Suya?")])],1)]),t._v(" "),n("li",{staticClass:"mt-5 text-black font-bold"},[t._v("Usage")]),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Node.js")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Redis")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Memcached")])],1)]),t._v(" "),n("li",{staticClass:"mt-5 text-black font-bold"},[t._v("API")]),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("new Suya([options])")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("#forever()")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("#duration([n])")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("#resetOnMutation([options])")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("#close()")])],1)]),t._v(" "),n("li",{staticClass:"mt-5 text-black font-bold"},[t._v("Error Handling")]),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Express.js")])],1)]),t._v(" "),n("li",{staticClass:"mt-5 text-black font-bold"},[t._v("Tests")]),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Benchmark")]),t._v(" "),n("ul",{staticClass:"ml-1"},[n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Node.js")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Redis")])],1),t._v(" "),n("li",{staticClass:"mt-2"},[n("nuxt-link",{staticClass:"text-purple-800",attrs:{to:""}},[t._v("Memcached")])],1)])],1)])])]),t._v(" "),n("div",{staticClass:"w-full lg:w-5/6 h-screen overflow-y-auto px-5 lg:px-10 pt-5 pb-10"},[n("div",{staticClass:"mb-5 text-gray-900 lg:hidden"},[n("svg",{staticClass:"w-6 h-6 cursor-pointer fill-current",staticStyle:{"enable-background":"new 0 0 512 512"},attrs:{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs",version:"1.1",width:"512",height:"512",x:"0",y:"0",viewBox:"0 0 512 512","xml:space":"preserve"},on:{click:t.toggleMenu}},[n("g",[n("g",{attrs:{xmlns:"http://www.w3.org/2000/svg"}},[n("path",{attrs:{d:"m174 240h-108c-36.393 0-66-29.607-66-66v-108c0-36.393 29.607-66 66-66h108c36.393 0 66 29.607 66 66v108c0 36.393-29.607 66-66 66zm-108-208c-18.748 0-34 15.252-34 34v108c0 18.748 15.252 34 34 34h108c18.748 0 34-15.252 34-34v-108c0-18.748-15.252-34-34-34z",fill:"#838383","data-original":"#000000"}}),t._v(" "),n("path",{attrs:{d:"m446 240h-108c-36.393 0-66-29.607-66-66v-108c0-36.393 29.607-66 66-66h108c36.393 0 66 29.607 66 66v108c0 36.393-29.607 66-66 66zm-108-208c-18.748 0-34 15.252-34 34v108c0 18.748 15.252 34 34 34h108c18.748 0 34-15.252 34-34v-108c0-18.748-15.252-34-34-34z",fill:"#838383","data-original":"#000000"}}),t._v(" "),n("path",{attrs:{d:"m392 512c-66.168 0-120-53.832-120-120s53.832-120 120-120 120 53.832 120 120-53.832 120-120 120zm0-208c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88z",fill:"#838383","data-original":"#000000"}}),t._v(" "),n("path",{attrs:{d:"m174 512h-108c-36.393 0-66-29.607-66-66v-108c0-36.393 29.607-66 66-66h108c36.393 0 66 29.607 66 66v108c0 36.393-29.607 66-66 66zm-108-208c-18.748 0-34 15.252-34 34v108c0 18.748 15.252 34 34 34h108c18.748 0 34-15.252 34-34v-108c0-18.748-15.252-34-34-34z",fill:"#838383","data-original":"#000000"}})])])]),t._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:t.state,expression:"state"}],staticClass:"mt-3"},[n("div",{staticClass:"flex flex-wrap"},[n("div",{staticClass:"w-1/2 sm:w-1/3"},[t._v("#")]),t._v(" "),n("div",{staticClass:"w-1/2 sm:w-1/3"},[t._v("\n              #\n              "),n("nuxt-link",{staticClass:"text-purple-800 font-bold",attrs:{to:"/oss/suya/docs/getting-started"}},[t._v("Getting Started")])],1),t._v(" "),n("div",{staticClass:"w-1/2 sm:w-1/3"},[t._v("\n              #\n              "),n("nuxt-link",{staticClass:"text-purple-800 font-bold",attrs:{to:"/oss/suya/docs/usage"}},[t._v("Usage")])],1),t._v(" "),n("div",{staticClass:"w-1/2 sm:w-1/3"},[t._v("\n              #\n              "),n("nuxt-link",{staticClass:"text-purple-800 font-bold",attrs:{to:"/oss/suya/docs/api"}},[t._v("API")])],1),t._v(" "),n("div",{staticClass:"w-1/2 sm:w-1/3"},[t._v("\n              #\n              "),n("nuxt-link",{staticClass:"text-purple-800 font-bold",attrs:{to:"/oss/suya/docs/error-handling"}},[t._v("Error Handling")])],1),t._v(" "),n("div",{staticClass:"w-1/2 sm:w-1/3"},[t._v("\n              #\n              "),n("nuxt-link",{staticClass:"text-purple-800 font-bold",attrs:{to:"/oss/suya/docs/tests"}},[t._v("Tests")])],1)])])]),t._v(" "),n("div",{staticClass:"flex flex-wrap"},[n("div",{staticClass:"w-full lg:w-2/3"},[t._m(1),t._v(" "),n("div",{attrs:{id:"package-documentation"}},[t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),n("div",{staticClass:"mt-5",attrs:{id:"package-pagination"}},[n("div",{staticClass:"flex flex-wrap w-full"},[n("div",{staticClass:"mt-2 w-full md:w-2/5"},[n("span",{staticClass:"flex text-black text-xs float-left"},[n("svg",{staticClass:"mt-2 mr-2 h-3 w-3",attrs:{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"}},[n("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M10 19l-7-7m0 0l7-7m-7 7h18"}})]),t._v("\n                    Prev\n                  ")]),t._v(" "),n("nuxt-link",{staticClass:"inline-flex items-center justify-center w-full h-12 px-6 mt-2 font-medium tracking-wide text-gray-800 border border-purple-500 rounded shadow-lg hover:border-purple-700 focus:shadow-outline focus:outline-none",attrs:{to:"/oss/suya/docs/api"}},[t._v("\n                    API")])],1),t._v(" "),n("div",{staticClass:"mt-2 w-full md:w-1/5"}),t._v(" "),n("div",{staticClass:"mt-2 w-full md:w-2/5"},[n("span",{staticClass:"flex text-black text-xs float-right"},[t._v("Next\n                    "),n("svg",{staticClass:"mt-2 ml-2 h-3 w-3",attrs:{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"}},[n("path",{attrs:{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M14 5l7 7m0 0l-7 7m7-7H3"}})])]),t._v(" "),n("nuxt-link",{staticClass:"inline-flex items-center justify-center w-full h-12 px-6 mt-2 font-medium tracking-wide text-gray-800 border border-purple-500 rounded shadow-lg hover:border-purple-700 focus:shadow-outline focus:outline-none",attrs:{to:"/oss/suya/docs/error-handling"}},[t._v("\n                    Error Handling\n                  ")])],1)])])])]),t._v(" "),t._m(6)])])])])}),[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("h1",{staticClass:"mt-3 tracking-widest font-bold"},[n("span",{staticClass:"text-gray-900"},[t._v("SUYA")]),t._v(" "),n("span",{staticClass:"text-purple-800"},[t._v("DOCS")]),t._v(" "),n("small",{staticClass:"text-gray-900"},[n("small",[t._v("V1.0.3")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"bg-white shadow sticky top-0"},[e("form",{attrs:{action:""}},[e("input",{staticClass:"w-full py-2 pl-3 bg-gray-100 text-gray-900 focus:outline-none focus:bg-white border border-purple-300 rounded",attrs:{type:"text",name:"",id:"",placeholder:"Search Suya Docs v1.0.3"}})])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"package-heading"}},[n("h1",{staticClass:"mt-10 text-2xl md:text-3xl lg:text-4xl text-black font-bold underline"},[t._v("\n                # Usage\n              ")]),t._v(" "),n("p",{staticClass:"mt-5 text-gray-900"},[t._v("\n                To begin, you would need a cache/in memory store such as\n                Redis, or Memcached installed on your machine or alternatively\n                using NodeJS Internal Caching. If you want to quickly get up\n                and running without installing Redis or Memcached on your\n                machine. I highly recommend using managed cloud services like\n                "),n("a",{staticClass:"text-purple-800 font-bold",attrs:{href:"https://redislabs.com",target:"_blank"}},[t._v("RedisLabs")]),t._v("\n                or\n                "),n("a",{staticClass:"text-purple-800 font-bold",attrs:{href:"https://www.memcachier.com",target:"_blank"}},[t._v("Memcachier")]),t._v(". No worries, they both have free plan with 25MB storage with\n                no credit card required.\n              ")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"mt-10",attrs:{id:"nodejs-usage"}},[n("h3",{staticClass:"flex text-2xl text-black font-bold underline"},[t._v("\n                Node.js 💪\n              ")]),t._v(" "),n("pre",{staticClass:"mt-5 bg-gray-300 rounded-lg"},[t._v("              "),n("div",{staticClass:"ml-3 flex -mt-3"},[t._v("\n                "),n("span",{staticClass:"font-bolder bg-red-500 p-2 rounded-full"}),t._v("\n                "),n("span",{staticClass:"ml-2 font-bolder bg-green-500 p-2 rounded-full"}),t._v("\n                "),n("span",{staticClass:"ml-2 font-bolder bg-yellow-500 p-2 rounded-full"}),t._v("\n              ")]),t._v("\n              "),n("code",{staticClass:"language-js bg-white border border-gray-300 -mt-10 -mb-5"},[t._v(" \n  const express = require('express')\n  const { Suya } = require('suya')\n\n  const app = express()\n\n  const Cache = new Suya({\n    engine: {\n      name: 'node-cache',\n    },\n  })\n\n  // This is a middleware to cache forever.\n  // Methods supported: GET\n  let cacheForever = Cache.forever()\n\n  // This is a middleware to cache for a specific seconds.\n  // Methods supported: GET\n  let cacheWithDuration = Cache.duration(50)\n\n  // This is a middleware to reset cache on mutation.\n  // Methods supported: POST, PUT, PATCH, DELETE\n  let resetCacheOnMutate = Cache.resetOnMutate({\n    indicator: {\n      success: true,\n    },\n  })\n\n  let mockDB = () => {\n    let users = [\n      {\n        id: 1,\n        name: 'John Smith',\n        email: 'john@domain.com',\n      },\n      {\n        id: 2,\n        name: 'James Noah',\n        email: 'noah@domain.com',\n      },\n    ]\n\n    // mocking response time to be between 100ms - 600ms\n    let randResponseTime = Math.floor(Math.random() * 6 + 1) * 100\n\n    return new Promise((resolve, reject) => {\n      return setTimeout(() => {\n        resolve(users)\n      }, randResponseTime)\n    })\n  }\n\n  app.get('/users/forever', cacheForever, async (req, res, next) => {\n    let users = await mockDB()\n\n    res.status(200).json({\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.put('/users/forever', resetCacheOnMutate, async (req, res, next) => {\n    let users = await mockDB()\n\n    // res.status(400).json({\n    //   // once the indicator set on .resetOnMutate({}) middleware doesn't match\n    //   // like so, the data remain cached.\n    //   success: false,\n    //   error: {\n    //     message: 'Email address is required!',\n    //   },\n    //   code: 400,\n    // })\n\n    res.status(200).json({\n      // once the indicator set on .resetOnMutate({}) middleware match like so,\n      // the cached data would get cleared it out.\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.get('/users/duration', cacheWithDuration, async (req, res, next) => {\n    let users = await mockDB()\n\n    res.status(200).json({\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.put('/users/duration', resetCacheOnMutate, async (req, res, next) => {\n    let users = await mockDB()\n\n    // res.status(400).json({\n    //   // once the indicator set on .resetOnMutate({}) middleware doesn't match\n    //   // like so, the data remain cached.\n    //   success: false,\n    //   error: {\n    //     message: 'Email address is required!',\n    //   },\n    //   code: 400,\n    // })\n\n    res.status(200).json({\n      // once the indicator set on .resetOnMutate({}) middleware match like so,\n      // the cached data would get cleared it out.\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  const server = app.listen(2000, () =>\n    console.log('Server running at http://127.0.0.1:2000')\n  )\n\n  process.on('unhandledRejection', (err, promise) => {\n    console.log(`Error: ${err.message}`)\n\n    // close the server\n    server.close(async () => {\n      // close connection\n      await Cache.close()\n\n      process.exit(1)\n    })\n  })\n              ")]),t._v(" \n          ")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"mt-10",attrs:{id:"nodejs-usage"}},[n("h3",{staticClass:"flex text-2xl text-black font-bold underline"},[t._v("\n                Redis 👊\n              ")]),t._v(" "),n("pre",{staticClass:"mt-5 bg-gray-300 rounded-lg"},[t._v("              "),n("div",{staticClass:"ml-3 flex -mt-3"},[t._v("\n                "),n("span",{staticClass:"font-bolder bg-red-500 p-2 rounded-full"}),t._v("\n                "),n("span",{staticClass:"ml-2 font-bolder bg-green-500 p-2 rounded-full"}),t._v("\n                "),n("span",{staticClass:"ml-2 font-bolder bg-yellow-500 p-2 rounded-full"}),t._v("\n              ")]),t._v("\n              "),n("code",{staticClass:"language-js bg-white border border-gray-300 -mt-10 -mb-5"},[t._v("\n  const express = require('express')\n  const { Suya } = require('suya')\n\n  const app = express()\n\n  const Cache = new Suya({\n    engine: {\n      name: 'redis',\n      configs: {\n        redis: {\n          // node-redis configs options.\n          // https://github.com/NodeRedis/node-redis#options-object-properties\n          options: {\n            host: '127.0.0.1', // Redis host\n            port: 6379, // Redis port\n            password: '[pass]', // Redis password\n            family: 4, // 4 (IPv4) or 6 (IPv6)\n            db: 0, // Redis database\n          },\n        },\n      },\n      // whether suya should/shouldn't log to console\n      logging: true,\n    },\n  })\n\n  // This is a middleware to cache forever.\n  // Methods supported: GET\n  let cacheForever = Cache.forever()\n\n  // This is a middleware to cache for a specific seconds.\n  // Methods supported: GET\n  let cacheWithDuration = Cache.duration(50)\n\n  // This is a middleware to reset cache on mutation.\n  // Methods supported: POST, PUT, PATCH, DELETE\n  let resetCacheOnMutate = Cache.resetOnMutate({\n    indicator: {\n      success: true,\n    },\n  })\n\n  let mockDB = () => {\n    let users = [\n      {\n        id: 1,\n        name: 'John Smith',\n        email: 'john@domain.com',\n      },\n      {\n        id: 2,\n        name: 'James Noah',\n        email: 'noah@domain.com',\n      },\n    ]\n\n    // mocking response time to be between 100ms - 600ms\n    let randResponseTime = Math.floor(Math.random() * 6 + 1) * 100\n\n    return new Promise((resolve, reject) => {\n      return setTimeout(() => {\n        resolve(users)\n      }, randResponseTime)\n    })\n  }\n\n  app.get('/users/forever', cacheForever, async (req, res, next) => {\n    let users = await mockDB()\n\n    res.status(200).json({\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.put('/users/forever', resetCacheOnMutate, async (req, res, next) => {\n    let users = await mockDB()\n\n    // res.status(400).json({\n    //   // once the indicator set on .resetOnMutate({}) middleware doesn't match\n    //   // like so, the data remain cached.\n    //   success: false,\n    //   error: {\n    //     message: 'Email address is required!',\n    //   },\n    //   code: 400,\n    // })\n\n    res.status(200).json({\n      // once the indicator set on .resetOnMutate({}) middleware match like so,\n      // the cached data would get cleared it out.\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.get('/users/duration', cacheWithDuration, async (req, res, next) => {\n    let users = await mockDB()\n\n    res.status(200).json({\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.put('/users/duration', resetCacheOnMutate, async (req, res, next) => {\n    let users = await mockDB()\n\n    // res.status(400).json({\n    //   // once the indicator set on .resetOnMutate({}) middleware doesn't match\n    //   // like so, the data remain cached.\n    //   success: false,\n    //   error: {\n    //     message: 'Email address is required!',\n    //   },\n    //   code: 400,\n    // })\n\n    res.status(200).json({\n      // once the indicator set on .resetOnMutate({}) middleware match like so,\n      // the cached data would get cleared it out.\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  const server = app.listen(2000, () =>\n    console.log('Server running at http://127.0.0.1:2000')\n  )\n\n  process.on('unhandledRejection', (err, promise) => {\n    console.log(`Error: ${err.message}`)\n\n    // close the server\n    server.close(async () => {\n      // close connection\n      await Cache.close()\n\n      process.exit(1)\n    })\n  })\n              ")]),t._v("\n          ")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"mt-10",attrs:{id:"nodejs-usage"}},[n("h3",{staticClass:"flex text-2xl text-black font-bold underline"},[t._v("\n                Memcached 👌\n              ")]),t._v(" "),n("pre",{staticClass:"mt-5 bg-gray-300 rounded-lg"},[t._v("              "),n("div",{staticClass:"ml-3 flex -mt-3"},[t._v("\n                "),n("span",{staticClass:"font-bolder bg-red-500 p-2 rounded-full"}),t._v("\n                "),n("span",{staticClass:"ml-2 font-bolder bg-green-500 p-2 rounded-full"}),t._v("\n                "),n("span",{staticClass:"ml-2 font-bolder bg-yellow-500 p-2 rounded-full"}),t._v("\n              ")]),t._v("\n              "),n("code",{staticClass:"language-js bg-white border border-gray-300 -mt-10 -mb-5"},[t._v("\n  const express = require('express')\n  const { Suya } = require('suya')\n\n  const app = express()\n\n  const Cache = new Suya({\n    engine: {\n      name: 'memcached',\n      configs: {\n        memcached: {\n          // server string format e.g\n          // single server        - user:pass@server1:11211\n          // multiple servers     - user:pass@server1:11211,user:pass@server2:11211\n          server: 'johndoe:1Mx4rGj0r@127.0.0.1:11211', // local memcached server\n          // memjs configs options - https://github.com/memcachier/memjs\n          // some memjs options are overridden by suya. supported options are\n          // {\n          //   retries: 2,\n          //   retry_delay: 0.2,\n          //   failoverTime: 60,\n          // }\n          options: {\n            retries: 2,\n            retry_delay: 0.2,\n            failoverTime: 60,\n          },\n        },\n      },\n      // whether suya should/shouldn't log to console\n      logging: true,\n    },\n  })\n\n  // This is a middleware to cache forever.\n  // Methods supported: GET\n  let cacheForever = Cache.forever()\n\n  // This is a middleware to cache for a specific seconds.\n  // Methods supported: GET\n  let cacheWithDuration = Cache.duration(50)\n\n  // This is a middleware to reset cache on mutation.\n  // Methods supported: POST, PUT, PATCH, DELETE\n  let resetCacheOnMutate = Cache.resetOnMutate({\n    indicator: {\n      success: true,\n    },\n  })\n\n  let mockDB = () => {\n    let users = [\n      {\n        id: 1,\n        name: 'John Smith',\n        email: 'john@domain.com',\n      },\n      {\n        id: 2,\n        name: 'James Noah',\n        email: 'noah@domain.com',\n      },\n    ]\n\n    // mocking response time to be between 100ms - 600ms\n    let randResponseTime = Math.floor(Math.random() * 6 + 1) * 100\n\n    return new Promise((resolve, reject) => {\n      return setTimeout(() => {\n        resolve(users)\n      }, randResponseTime)\n    })\n  }\n\n  app.get('/users/forever', cacheForever, async (req, res, next) => {\n    let users = await mockDB()\n\n    res.status(200).json({\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.put('/users/forever', resetCacheOnMutate, async (req, res, next) => {\n    let users = await mockDB()\n\n    // res.status(400).json({\n    //   // once the indicator set on .resetOnMutate({}) middleware doesn't match\n    //   // like so, the data remain cached.\n    //   success: false,\n    //   error: {\n    //     message: 'Email address is required!',\n    //   },\n    //   code: 400,\n    // })\n\n    res.status(200).json({\n      // once the indicator set on .resetOnMutate({}) middleware match like so,\n      // the cached data would get cleared it out.\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.get('/users/duration', cacheWithDuration, async (req, res, next) => {\n    let users = await mockDB()\n\n    res.status(200).json({\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  app.put('/users/duration', resetCacheOnMutate, async (req, res, next) => {\n    let users = await mockDB()\n\n    // res.status(400).json({\n    //   // once the indicator set on .resetOnMutate({}) middleware doesn't match\n    //   // like so, the data remain cached.\n    //   success: false,\n    //   error: {\n    //     message: 'Email address is required!',\n    //   },\n    //   code: 400,\n    // })\n\n    res.status(200).json({\n      // once the indicator set on .resetOnMutate({}) middleware match like so,\n      // the cached data would get cleared it out.\n      success: true,\n      data: {\n        users,\n      },\n      code: 200,\n    })\n  })\n\n  const server = app.listen(2000, () =>\n    console.log('Server running at http://127.0.0.1:2000')\n  )\n\n  process.on('unhandledRejection', (err, promise) => {\n    console.log(`Error: ${err.message}`)\n\n    // close the server\n    server.close(async () => {\n      // close connection\n      await Cache.close()\n\n      process.exit(1)\n    })\n  })\n              ")]),t._v("\n          ")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"w-full hidden lg:block lg:w-1/3"},[n("div",{staticClass:"sticky top-0 p-5"},[n("h1",{staticClass:"text-gray-900 text-xl tracking-wider font-bold underline"},[t._v("\n              # Usage\n            ")]),t._v(" "),n("p",{staticClass:"mt-3 text-gray-900"},[t._v("\n              To begin, you would need a cache/in memory store such as Redis,\n              or Memcached installed on your machine or alternatively using\n              NodeJS Internal Caching.\n            ")])])])}],!1,null,null,null);e.default=component.exports}}]);